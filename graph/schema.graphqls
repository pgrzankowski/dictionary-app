scalar Date

type PolishWord {
  id: ID!
  word: String!
  createdAt: Date!
  updatedAt: Date!

  translations: [Translation!]!
}

type Translation {
  id: ID!
  englishWord: String!
  createdAt: Date!
  updatedAt: Date!

  polishWord: PolishWord!

  examples: [Example!]!
}

type Example {
  id: ID!
  sentence: String!
  createdAt: Date!
  updatedAt: Date!

  translation: Translation!
}

input NewExampleInput {
  sentence: String!
}

input NewTranslationInput {
  polishWord: String!
  englishWord: String!
  examples: [NewExampleInput!]
}

input UpdateTranslationInput {
  id: ID!
  englishWord: String
}

type Query {
  translations: [Translation!]!
  translation(id: ID!): Translation
}

type Mutation {
  createTranslation(input: NewTranslationInput!): Translation!
  removeTranslation(id: ID!): Boolean!
  updateTranslation(input: UpdateTranslationInput!): Translation!
}